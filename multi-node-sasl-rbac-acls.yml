version: '3.5'
services:

  zoo1:
    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION}
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      #KAFKA_OPTS: '-Djavax.net.debug=all'
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_SECURE_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888;zoo3:2888:3888
      ZOOKEEPER_SERVER_CNXN_FACTORY: org.apache.zookeeper.server.NettyServerCnxnFactory
      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /var/ssl/private/zoo1.kafka_network.keystore.jks
      ZOOKEEPER_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/zoo1.kafka_network.truststore.jks
      ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      #ZOOKEEPER_SSL_CIPHER_SUITES: ${TLS_CIPHER_SUITES}
      ZOOKEEPER_AUTH_PROVIDER_SASL: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/zoo-server-jaas.conf
      ZOOKEEPER_SSL_QUORUM: 'true'
      ZOOKEEPER_SSL_QUORUM_KEYSTORE_LOCATION: /var/ssl/private/zoo1.kafka_network.keystore.jks
      ZOOKEEPER_SSL_QUORUM_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      ZOOKEEPER_SSL_QUORUM_TRUSTSTORE_LOCATION: /var/ssl/private/zoo1.kafka_network.truststore.jks
      ZOOKEEPER_SSL_QUORUM_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      ZOOKEEPER_QUORUM_AUTH_ENABLE_SASL: 'true'
      ZOOKEEPER_QUORUM_AUTH_LEARNER_REQUIRE_SASL: 'true'
      ZOOKEEPER_QUORUM_AUTH_SERVER_REQUIRE_SASL: 'true'
      ZOOKEEPER_QUORUM_AUTH_LEARNER_SASL_LOGIN_CONTEXT: QuorumLearner
      ZOOKEEPER_QUORUM_AUTH_SERVER_SASL_LOGIN_CONTEXT: QuorumServer
      ZOOKEEPER_QUORUM_CNXN_THREADS_SIZE: 20
      ZOOKEEPER_4LW_COMMANDS_WHITELIST: '*'
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/zoo-server-jaas.conf"
    volumes:
      - ./volumes/zoo-1/data:/var/lib/zookeeper/log
      - ./volumes/zoo-1/logs:/var/log/zookeeper
      - ./certs:/var/ssl/private:ro
      - ./secrets:/etc/kafka/secrets:ro
    networks:
      - kafka-network

  zoo2:
    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION}
    hostname: zoo2
    container_name: zoo2
    ports:
      - "2182:2182"
    environment:
      #KAFKA_OPTS: '-Djavax.net.debug=all'
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 22182
      ZOOKEEPER_SECURE_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888;zoo3:2888:3888
      ZOOKEEPER_SERVER_CNXN_FACTORY: org.apache.zookeeper.server.NettyServerCnxnFactory
      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /var/ssl/private/zoo2.kafka_network.keystore.jks
      ZOOKEEPER_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/zoo2.kafka_network.truststore.jks
      ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      #ZOOKEEPER_SSL_CIPHER_SUITES: ${TLS_CIPHER_SUITES}
      ZOOKEEPER_AUTH_PROVIDER_SASL: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
      ZOOKEEPER_SSL_QUORUM: 'true'
      ZOOKEEPER_SSL_QUORUM_KEYSTORE_LOCATION: /var/ssl/private/zoo2.kafka_network.keystore.jks
      ZOOKEEPER_SSL_QUORUM_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      ZOOKEEPER_SSL_QUORUM_TRUSTSTORE_LOCATION: /var/ssl/private/zoo2.kafka_network.truststore.jks
      ZOOKEEPER_SSL_QUORUM_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      #ZOOKEEPER_SSL_QUORUM_CIPHER_SUITES: ${TLS_CIPHER_SUITES}
      ZOOKEEPER_QUORUM_AUTH_ENABLE_SASL: 'true'
      ZOOKEEPER_QUORUM_AUTH_LEARNER_REQUIRE_SASL: 'true'
      ZOOKEEPER_QUORUM_AUTH_SERVER_REQUIRE_SASL: 'true'
      ZOOKEEPER_QUORUM_AUTH_LEARNER_SASL_LOGIN_CONTEXT: QuorumLearner
      ZOOKEEPER_QUORUM_AUTH_SERVER_SASL_LOGIN_CONTEXT: QuorumServer
      ZOOKEEPER_QUORUM_CNXN_THREADS_SIZE: 20
      ZOOKEEPER_4LW_COMMANDS_WHITELIST: '*'
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/zoo-server-jaas.conf"
    volumes:
      - ./volumes/zoo-2/data:/var/lib/zookeeper/log
      - ./volumes/zoo-2/logs:/var/log/zookeeper
      - ./certs:/var/ssl/private:ro
      - ./secrets:/etc/kafka/secrets:ro
    networks:
      - kafka-network

  zoo3:
    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION}
    hostname: zoo3
    container_name: zoo3
    ports:
      - "2183:2183"
    environment:
      #KAFKA_OPTS: '-Djavax.net.debug=all'
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 22183
      ZOOKEEPER_SECURE_CLIENT_PORT: 2183
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888;zoo3:2888:3888
      ZOOKEEPER_SERVER_CNXN_FACTORY: org.apache.zookeeper.server.NettyServerCnxnFactory
      ZOOKEEPER_SSL_KEYSTORE_LOCATION: /var/ssl/private/zoo3.kafka_network.keystore.jks
      ZOOKEEPER_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/zoo3.kafka_network.truststore.jks
      ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      #ZOOKEEPER_SSL_CIPHER_SUITES: ${TLS_CIPHER_SUITES}
      ZOOKEEPER_AUTH_PROVIDER_SASL: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
      ZOOKEEPER_SSL_QUORUM: 'true'
      ZOOKEEPER_SSL_QUORUM_KEYSTORE_LOCATION: /var/ssl/private/zoo3.kafka_network.keystore.jks
      ZOOKEEPER_SSL_QUORUM_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      ZOOKEEPER_SSL_QUORUM_TRUSTSTORE_LOCATION: /var/ssl/private/zoo3.kafka_network.truststore.jks
      ZOOKEEPER_SSL_QUORUM_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      #ZOOKEEPER_SSL_QUORUM_CIPHER_SUITES: ${TLS_CIPHER_SUITES}
      ZOOKEEPER_QUORUM_AUTH_ENABLE_SASL: 'true'
      ZOOKEEPER_QUORUM_AUTH_LEARNER_REQUIRE_SASL: 'true'
      ZOOKEEPER_QUORUM_AUTH_SERVER_REQUIRE_SASL: 'true'
      ZOOKEEPER_QUORUM_AUTH_LEARNER_SASL_LOGIN_CONTEXT: QuorumLearner
      ZOOKEEPER_QUORUM_AUTH_SERVER_SASL_LOGIN_CONTEXT: QuorumServer
      ZOOKEEPER_QUORUM_CNXN_THREADS_SIZE: 20
      ZOOKEEPER_4LW_COMMANDS_WHITELIST: '*'
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/zoo-server-jaas.conf"
    volumes:
      - ./volumes/zoo-3/data:/var/lib/zookeeper/log
      - ./volumes/zoo-3/logs:/var/log/zookeeper
      - ./certs:/var/ssl/private:ro
      - ./secrets:/etc/kafka/secrets:ro
    networks:
      - kafka-network

  ldap:
    image: osixia/openldap:${OPENLDAP_VERSION}
    hostname: ldap
    container_name: ldap
    ports:
      - "389:389"
    environment:
        LDAP_ORGANISATION: "MyCompany"
        LDAP_DOMAIN: "mycompany.com"
        LDAP_BASE_DN: "dc=mycompany,dc=com"
        LDAP_ADMIN_PASSWORD: "admin-secret"
        LDAP_CONFIG_PASSWORD: "config-secret"
        LDAP_READONLY_USER: "true"
        LDAP_READONLY_USER_USERNAME: "mds"
        LDAP_READONLY_USER_PASSWORD: "mds-secret"
        #LDAP_TLS_VERIFY_CLIENT: try
        #LDAP_TLS_CRT_FILENAME: ldap.kafka_network_cert.pem
        #LDAP_TLS_KEY_FILENAME: ldap.kafka_network_key.pem
        #LDAP_TLS_CA_CRT_FILENAME: ca.crt
        #LDAP_TLS: 'true'
    volumes:
      - ./volumes/ldap/data:/var/lib/ldap
      - ./volumes/ldap/config:/etc/ldap/slapd.d
      - ./ldap:/container/service/slapd/assets/config/bootstrap/ldif/custom
      - ./certs:/container/service/slapd/assets/certs:ro
    command: "--copy-service --loglevel debug"
    networks:
      - kafka-network

  kafka1:
    image: confluentinc/cp-server:${CONFLUENT_VERSION}
    hostname: kafka1
    container_name: kafka1
    depends_on:
      - zoo1
      - zoo2
      - zoo3
      - ldap
    ports:
      - "9093:9093"
      - "19093:19093"
      - "29093:29093"
      - "8091:8091"
      - "9010:9010"
    environment:
      KAFKA_BROKER_ID: 1
      # zookeeper
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2182,zoo3:2183
      KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET: org.apache.zookeeper.ClientCnxnSocketNetty
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: 'true'
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka1.kafka_network.keystore.jks
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka1.kafka_network.truststore.jks
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      #KAFKA_ZOOKEEPER_SSL_CIPHER_SUITES: ${TLS_CIPHER_SUITES}
      #KAFKA_ZOOKEEPER_SASL_CLIENT: 'true'
      # listeners
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:SASL_SSL,TOKEN:SASL_SSL,INTERNAL:SASL_SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:9093,TOKEN://kafka1:19093,INTERNAL://kafka1:29093
      KAFKA_LISTENERS: EXTERNAL://kafka1:9093,TOKEN://kafka1:19093,INTERNAL://kafka1:29093
      # encryption
      KAFKA_SECURITY_PROTOCOL: SASL_SSL
      KAFKA_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka1.kafka_network.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka1.kafka_network.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_SSL_CLIENT_AUTH: 'requested' # changed to required to force client to have cert
      #KAFKA_SSL_CIPHER_SUITES: ${TLS_CIPHER_SUITES}
      # authentication
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN,OAUTHBEARER
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      # internal listener
      KAFKA_LISTENER_NAME_INTERNAL_SASL_MECHANISM: PLAIN
      KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_INTERNAL_PLAIN_SASL_JAAS_CONFIG: >-
              org.apache.kafka.common.security.plain.PlainLoginModule required 
              username="kafka" 
              password="kafka-secret" 
              user_kafka="kafka-secret";
      KAFKA_LISTENER_NAME_INTERNAL_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka1.kafka_network.keystore.jks
      KAFKA_LISTENER_NAME_INTERNAL_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_LISTENER_NAME_INTERNAL_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka1.kafka_network.truststore.jks
      KAFKA_LISTENER_NAME_INTERNAL_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_LISTENER_NAME_INTERNAL_SSL_PRINCIPAL_MAPPING_RULES: RULE:^cn=([a-zA-Z0-9.]*).*$$/$$1/L,DEFAULT
      # external listener
      KAFKA_LISTENER_NAME_EXTERNAL_SASL_MECHANISM: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_JAAS_CONFIG: >-
              org.apache.kafka.common.security.plain.PlainLoginModule required 
              user_admin="admin-secret" 
              user_client="client-secret" 
              user_datagen="datagen-secret" 
              user_jdbcsink="jdbcsink-secret";
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka1.kafka_network.keystore.jks
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka1.kafka_network.truststore.jks
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_PRINCIPAL_MAPPING_RULES: RULE:^cn=([a-zA-Z0-9.]*).*$$/$$1/L,DEFAULT
      # token listener
      KAFKA_LISTENER_NAME_TOKEN_SASL_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_TOKEN_SASL_ENABLED_MECHANISMS: OAUTHBEARER
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_JAAS_CONFIG: >-
              org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required 
              publicKeyPath="/var/ssl/private/token_crt.pem";
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
      KAFKA_LISTENER_NAME_TOKEN_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka1.kafka_network.keystore.jks
      KAFKA_LISTENER_NAME_TOKEN_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_LISTENER_NAME_TOKEN_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka1.kafka_network.truststore.jks
      KAFKA_LISTENER_NAME_TOKEN_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_LISTENER_NAME_TOKEN_SSL_PRINCIPAL_MAPPING_RULES: RULE:^cn=([a-zA-Z0-9.]*).*$$/$$1/L,DEFAULT
      # authorization
      KAFKA_AUTHORIZER_CLASS_NAME: io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
      KAFKA_CONFLUENT_AUTHORIZER_ACCESS_RULE_PROVIDERS: CONFLUENT,ZK_ACL
      KAFKA_CONFIG_PROVIDERS: file
      KAFKA_CONFIG_PROVIDERS_FILE_CLASS: org.apache.kafka.common.config.provider.FileConfigProvider
      KAFKA_SUPER_USERS: "User:kafka;User:mds"
      KAFKA_SSL_PRINCIPAL_MAPPING_RULES: RULE:^cn=([a-zA-Z0-9]*).*$$/$$1/L,DEFAULT
      # balancer
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # metrics reporter
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:29093,kafka2:29094,kafka3:29095
      CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: SASL_SSL
      CONFLUENT_METRICS_REPORTER_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka1.kafka_network.keystore.jks
      CONFLUENT_METRICS_REPORTER_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      CONFLUENT_METRICS_REPORTER_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka1.kafka_network.truststore.jks
      CONFLUENT_METRICS_REPORTER_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      CONFLUENT_METRICS_REPORTER_SASL_MECHANISM: PLAIN
      CONFLUENT_METRICS_REPORTER_PUBLISH_MS: 30000
      CONFLUENT_METRICS_REPORTER_SASL_JAAS_CONFIG: >-
              org.apache.kafka.common.security.plain.PlainLoginModule required 
              username="kafka" 
              password="kafka-secret";
      # mds
      KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_METHOD: BEARER
      KAFKA_CONFLUENT_METADATA_SERVER_LISTENERS: https://0.0.0.0:8091
      KAFKA_CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS: https://kafka1:8091
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka1.kafka_network.keystore.jks
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_KEY_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka1.kafka_network.truststore.jks
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_CONFLUENT_METADATA_SERVER_OPENAPI_ENABLE: 'true'
      KAFKA_CONFLUENT_METADATA_SERVER_PUBLIC_KEY_PATH: /var/ssl/private/token_crt.pem
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: HTTPS
      KAFKA_CONFLUENT_METADATA_SERVER_ENABLE_SERVERS_URLS_REFRESH: 'false'
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_AUTH_ENABLE: 'true'
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_KEY_PATH: /var/ssl/private/token_key.pem
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_MAX_LIFETIME_MS: 3600000
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_SIGNATURE_ALGORITHM: RS256
      # ldap
      KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL: ldap://ldap:389
      KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL: cn=mds,dc=mycompany,dc=com
      KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS: mds-secret
      KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION: simple
      KAFKA_LDAP_GROUP_SEARCH_BASE: ou=groups,dc=mycompany,dc=com
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE_PATTERN: cn=(.*),ou=groups,dc=mycompany,dc=com
      KAFKA_LDAP_GROUP_NAME_ATTRIBUTE: cn
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE: member
      KAFKA_LDAP_GROUP_OBJECT_CLASS: group
      KAFKA_LDAP_USER_SEARCH_BASE: ou=users,dc=mycompany,dc=com
      KAFKA_LDAP_USER_MEMBEROF_ATTRIBUTE_PATTER: cn=(.*),ou=users,dc=mycompany,dc=com
      KAFKA_LDAP_USER_NAME_ATTRIBUTE: cn
      KAFKA_LDAP_USER_OBJECT_CLASS: organizationalRole
      # embedded rest client
      KAFKA_KAFKA_REST_BOOTSTRAP_SERVERS: kafka1:19093,kafka2:19094,kafka3:19094
      KAFKA_KAFKA_REST_CLIENT_SECURITY_PROTOCOL: SASL_SSL
      KAFKA_KAFKA_REST_CLIENT_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka1.kafka_network.keystore.jks
      KAFKA_KAFKA_REST_CLIENT_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_KAFKA_REST_CLIENT_SSL_KEY_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_KAFKA_REST_CLIENT_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka1.kafka_network.truststore.jks
      KAFKA_KAFKA_REST_CLIENT_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_KAFKA_REST_CLIENT_CONFLUENT_METADATA_SERVER_URLS_MAX_AGE_MS: 60000
      KAFKA_KAFKA_REST_CLIENT_SASL_JAAS_CONFIG: >-
              org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required 
              metadataServerUrls="https://kafka1:8091,https://kafka2:8092,https://kafka3:8093" 
              username="kafka" 
              password="kafka-secret";
      KAFKA_KAFKA_REST_CLIENT_SASL_MECHANISM: OAUTHBEARER
      # embedded rest
      KAFKA_KAFKA_REST_ENABLE: 'true'
      KAFKA_KAFKA_REST_KAFKA_REST_RESOURCE_EXTENSION_CLASS: io.confluent.kafkarest.security.KafkaRestSecurityResourceExtension
      KAFKA_KAFKA_REST_REST_SERVLET_INITIALIZOR_CLASSES: io.confluent.common.security.jetty.initializer.InstallBearerOrBasicSecurityHandler
      KAFKA_KAFKA_REST_PUBLIC_KEY_PATH: /var/ssl/private/token_crt.pem
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_BOOTSTRAP_SERVER_URLS: https://kafka1:8091,https://kafka2:8092,https://kafka3:8093
      KAFKA_KAFKA_REST_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka1.kafka_network.truststore.jks
      KAFKA_KAFKA_REST_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_BOOTSTRAP_SERVER: https://kafka1:8091,https://kafka2:8092,https://kafka3:8093
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_HTTP_AUTH_CREDENTIALS_PROVIDER: BASIC
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_BASIC_AUTH_USER_INFO: 'kafka:kafka-secret'
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_SERVER_URLS_MAX_AGE_MS: 60000
      # schema validation
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: https://schema1:8081
      KAFKA_CONFLUENT_BASIC_AUTH_CREDENTIALS_SOURCE: USER_INFO
      KAFKA_CONFLUENT_BASIC_AUTH_USER_INFO: 'kafka:kafka-secret'
      KAFKA_CONFLUENT_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka1.kafka_network.truststore.jks
      KAFKA_CONFLUENT_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      # logging
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: kafka.authorizer.logger=INFO
      #KAFKA_OPTS: '-Djavax.net.debug=ssl'
      #KAFKA_JMX_PORT: 9010
      #KAFKA_JMX_HOSTNAME: localhost
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/zoo-client-jaas.conf"
    volumes:
      - ./volumes/kafka-1/data:/var/lib/kafka/data
      - ./volumes/kafka-1/logs:/var/log/kafka
      - ./volumes/jmx_exporter:/jmx_exporter
      - ./certs:/var/ssl/private:ro
      - ./secrets:/etc/kafka/secrets:ro
    networks:
      - kafka-network

  kafka2:
    image: confluentinc/cp-server:${CONFLUENT_VERSION}
    hostname: kafka2
    container_name: kafka2
    depends_on:
      - zoo1
      - zoo2
      - zoo3
      - ldap
    ports:
      - "9094:9094"
      - "19094:19094"
      - "29094:29094"
      - "8092:8092"
      - "9011:9010"
    environment:
      KAFKA_BROKER_ID: 2
      # zookeeper
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2182,zoo3:2183
      KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET: org.apache.zookeeper.ClientCnxnSocketNetty
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: 'true'
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka2.kafka_network.keystore.jks
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka2.kafka_network.truststore.jks
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      #KAFKA_ZOOKEEPER_SSL_CIPHER_SUITES: ${TLS_CIPHER_SUITES}
      #KAFKA_ZOOKEEPER_SASL_CLIENT: 'true'
      # listeners
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:SASL_SSL,TOKEN:SASL_SSL,INTERNAL:SASL_SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:9094,TOKEN://kafka2:19094,INTERNAL://kafka2:29094
      KAFKA_LISTENERS: EXTERNAL://kafka2:9094,TOKEN://kafka2:19094,INTERNAL://kafka2:29094
      # encryption
      KAFKA_SECURITY_PROTOCOL: SASL_SSL
      KAFKA_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka2.kafka_network.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka2.kafka_network.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_SSL_CLIENT_AUTH: 'requested' # changed to required to force client to have cert
      #KAFKA_SSL_CIPHER_SUITES: ${TLS_CIPHER_SUITES}
      # authentication
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN,OAUTHBEARER
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      # internal listener
      KAFKA_LISTENER_NAME_INTERNAL_SASL_MECHANISM: PLAIN
      KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_INTERNAL_PLAIN_SASL_JAAS_CONFIG: >-
              org.apache.kafka.common.security.plain.PlainLoginModule required 
              username="kafka" 
              password="kafka-secret" 
              user_kafka="kafka-secret";
      KAFKA_LISTENER_NAME_INTERNAL_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka2.kafka_network.keystore.jks
      KAFKA_LISTENER_NAME_INTERNAL_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_LISTENER_NAME_INTERNAL_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka2.kafka_network.truststore.jks
      KAFKA_LISTENER_NAME_INTERNAL_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_LISTENER_NAME_INTERNAL_SSL_PRINCIPAL_MAPPING_RULES: RULE:^cn=([a-zA-Z0-9.]*).*$$/$$1/L,DEFAULT
      # external listener
      KAFKA_LISTENER_NAME_EXTERNAL_SASL_MECHANISM: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_JAAS_CONFIG: >-
              org.apache.kafka.common.security.plain.PlainLoginModule required 
              user_admin="admin-secret" 
              user_client="client-secret";
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka2.kafka_network.keystore.jks
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka2.kafka_network.truststore.jks
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_PRINCIPAL_MAPPING_RULES: RULE:^cn=([a-zA-Z0-9.]*).*$$/$$1/L,DEFAULT
      # token listener
      KAFKA_LISTENER_NAME_TOKEN_SASL_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_TOKEN_SASL_ENABLED_MECHANISMS: OAUTHBEARER
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_JAAS_CONFIG: >-
              org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required 
              publicKeyPath="/var/ssl/private/token_crt.pem";
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
      KAFKA_LISTENER_NAME_TOKEN_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka2.kafka_network.keystore.jks
      KAFKA_LISTENER_NAME_TOKEN_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_LISTENER_NAME_TOKEN_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka2.kafka_network.truststore.jks
      KAFKA_LISTENER_NAME_TOKEN_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_LISTENER_NAME_TOKEN_SSL_PRINCIPAL_MAPPING_RULES: RULE:^cn=([a-zA-Z0-9.]*).*$$/$$1/L,DEFAULT
      # authorization
      KAFKA_AUTHORIZER_CLASS_NAME: io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
      KAFKA_CONFLUENT_AUTHORIZER_ACCESS_RULE_PROVIDERS: CONFLUENT,ZK_ACL
      KAFKA_CONFIG_PROVIDERS: file
      KAFKA_CONFIG_PROVIDERS_FILE_CLASS: org.apache.kafka.common.config.provider.FileConfigProvider
      KAFKA_SUPER_USERS: "User:kafka;User:mds"
      KAFKA_SSL_PRINCIPAL_MAPPING_RULES: RULE:^cn=([a-zA-Z0-9]*).*$$/$$1/L,DEFAULT
      # balancer
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # metrics reporter
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:29093,kafka2:29094,kafka3:29095
      CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: SASL_SSL
      CONFLUENT_METRICS_REPORTER_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka2.kafka_network.keystore.jks
      CONFLUENT_METRICS_REPORTER_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      CONFLUENT_METRICS_REPORTER_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka2.kafka_network.truststore.jks
      CONFLUENT_METRICS_REPORTER_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      CONFLUENT_METRICS_REPORTER_SASL_MECHANISM: PLAIN
      CONFLUENT_METRICS_REPORTER_PUBLISH_MS: 30000
      CONFLUENT_METRICS_REPORTER_SASL_JAAS_CONFIG: >-
              org.apache.kafka.common.security.plain.PlainLoginModule required 
              username="kafka" 
              password="kafka-secret";
      # mds
      KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_METHOD: BEARER
      KAFKA_CONFLUENT_METADATA_SERVER_LISTENERS: https://0.0.0.0:8092
      KAFKA_CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS: https://kafka2:8092
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka2.kafka_network.keystore.jks
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_KEY_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka2.kafka_network.truststore.jks
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_CONFLUENT_METADATA_SERVER_OPENAPI_ENABLE: 'true'
      KAFKA_CONFLUENT_METADATA_SERVER_PUBLIC_KEY_PATH: /var/ssl/private/token_crt.pem
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: HTTPS
      KAFKA_CONFLUENT_METADATA_SERVER_ENABLE_SERVERS_URLS_REFRESH: 'false'
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_AUTH_ENABLE: 'true'
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_KEY_PATH: /var/ssl/private/token_key.pem
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_MAX_LIFETIME_MS: 3600000
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_SIGNATURE_ALGORITHM: RS256
      # ldap
      KAFKA_LDAP_JAVA_NAMING_FACTORY_INITIAL: com.sun.jndi.ldap.LdapCtxFactory
      KAFKA_LDAP_COM_SUN_JNDI_LDAP_READ_TIMEOUT: 3000
      KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL: ldap://ldap:389
      KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL: cn=mds,dc=mycompany,dc=com
      KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS: mds-secret
      KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION: simple
      KAFKA_LDAP_GROUP_SEARCH_BASE: ou=groups,dc=mycompany,dc=com
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE_PATTERN: cn=(.*),ou=groups,dc=mycompany,dc=com
      KAFKA_LDAP_GROUP_NAME_ATTRIBUTE: cn
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE: member
      KAFKA_LDAP_GROUP_OBJECT_CLASS: group
      KAFKA_LDAP_USER_SEARCH_BASE: ou=users,dc=mycompany,dc=com
      KAFKA_LDAP_USER_MEMBEROF_ATTRIBUTE_PATTER: cn=(.*),ou=users,dc=mycompany,dc=com
      KAFKA_LDAP_USER_NAME_ATTRIBUTE: cn
      KAFKA_LDAP_USER_OBJECT_CLASS: organizationalRole
      # embedded rest client
      KAFKA_KAFKA_REST_BOOTSTRAP_SERVERS: kafka1:19093,kafka2:19094,kafka3:19094
      KAFKA_KAFKA_REST_CLIENT_SECURITY_PROTOCOL: SASL_SSL
      KAFKA_KAFKA_REST_CLIENT_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka2.kafka_network.keystore.jks
      KAFKA_KAFKA_REST_CLIENT_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_KAFKA_REST_CLIENT_SSL_KEY_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_KAFKA_REST_CLIENT_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka2.kafka_network.truststore.jks
      KAFKA_KAFKA_REST_CLIENT_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_KAFKA_REST_CLIENT_CONFLUENT_METADATA_SERVER_URLS_MAX_AGE_MS: 60000
      KAFKA_KAFKA_REST_CLIENT_SASL_JAAS_CONFIG: >-
              org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required 
              metadataServerUrls="https://kafka1:8091,https://kafka2:8092,https://kafka3:8093" 
              username="kafka" 
              password="kafka-secret";
      KAFKA_KAFKA_REST_CLIENT_SASL_MECHANISM: OAUTHBEARER
      # embedded rest
      KAFKA_KAFKA_REST_ENABLE: 'true'
      KAFKA_KAFKA_REST_KAFKA_REST_RESOURCE_EXTENSION_CLASS: io.confluent.kafkarest.security.KafkaRestSecurityResourceExtension
      KAFKA_KAFKA_REST_REST_SERVLET_INITIALIZOR_CLASSES: io.confluent.common.security.jetty.initializer.InstallBearerOrBasicSecurityHandler
      KAFKA_KAFKA_REST_PUBLIC_KEY_PATH: /var/ssl/private/token_crt.pem
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_BOOTSTRAP_SERVER_URLS: https://kafka1:8091,https://kafka2:8092,https://kafka3:8093
      KAFKA_KAFKA_REST_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka2.kafka_network.truststore.jks
      KAFKA_KAFKA_REST_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_BOOTSTRAP_SERVER: https://kafka1:8091,https://kafka2:8092,https://kafka3:8093
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_HTTP_AUTH_CREDENTIALS_PROVIDER: BASIC
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_BASIC_AUTH_USER_INFO: 'kafka:kafka-secret'
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_SERVER_URLS_MAX_AGE_MS: 60000
      # schema validation
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: https://schema1:8081
      KAFKA_CONFLUENT_BASIC_AUTH_CREDENTIALS_SOURCE: USER_INFO
      KAFKA_CONFLUENT_BASIC_AUTH_USER_INFO: 'kafka:kafka-secret'
      KAFKA_CONFLUENT_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka2.kafka_network.truststore.jks
      KAFKA_CONFLUENT_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      # logging
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: kafka.authorizer.logger=INFO
      #KAFKA_OPTS: '-Djavax.net.debug=ssl'
      #KAFKA_JMX_PORT: 9010
      #KAFKA_JMX_HOSTNAME: localhost
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/zoo-client-jaas.conf"
    volumes:
      - ./volumes/kafka-2/data:/var/lib/kafka/data
      - ./volumes/kafka-2/logs:/var/log/kafka
      - ./volumes/jmx_exporter:/jmx_exporter
      - ./certs:/var/ssl/private:ro
      - ./secrets:/etc/kafka/secrets:ro
    networks:
      - kafka-network

  kafka3:
    image: confluentinc/cp-server:${CONFLUENT_VERSION}
    hostname: kafka3
    container_name: kafka3
    depends_on:
      - zoo1
      - zoo2
      - zoo3
      - ldap
    ports:
      - "9095:9095"
      - "19095:19095"
      - "29095:29095"
      - "8093:8093"
      - "9012:9010"
    environment:
      KAFKA_BROKER_ID: 3
      # zookeeper
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2182,zoo3:2183
      KAFKA_ZOOKEEPER_CLIENT_CNXN_SOCKET: org.apache.zookeeper.ClientCnxnSocketNetty
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: 'true'
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka3.kafka_network.keystore.jks
      KAFKA_ZOOKEEPER_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka3.kafka_network.truststore.jks
      KAFKA_ZOOKEEPER_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      #KAFKA_ZOOKEEPER_SSL_CIPHER_SUITES: ${TLS_CIPHER_SUITES}
      #KAFKA_ZOOKEEPER_SASL_CLIENT: 'true'
      # listeners
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:SASL_SSL,TOKEN:SASL_SSL,INTERNAL:SASL_SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:9095,TOKEN://kafka3:19095,INTERNAL://kafka3:29095
      KAFKA_LISTENERS: EXTERNAL://kafka3:9095,TOKEN://kafka3:19095,INTERNAL://kafka3:29095
      # encryption
      KAFKA_SECURITY_PROTOCOL: SASL_SSL
      KAFKA_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka3.kafka_network.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka3.kafka_network.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_SSL_CLIENT_AUTH: 'requested' # changed to required to force client to have cert
      #KAFKA_SSL_CIPHER_SUITES: ${TLS_CIPHER_SUITES}
      # authentication
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN,OAUTHBEARER
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      # internal listener
      KAFKA_LISTENER_NAME_INTERNAL_SASL_MECHANISM: PLAIN
      KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_INTERNAL_PLAIN_SASL_JAAS_CONFIG: >-
              org.apache.kafka.common.security.plain.PlainLoginModule required 
              username="kafka" \
              password="kafka-secret" \
              user_kafka="kafka-secret";
      KAFKA_LISTENER_NAME_INTERNAL_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka3.kafka_network.keystore.jks
      KAFKA_LISTENER_NAME_INTERNAL_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_LISTENER_NAME_INTERNAL_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka3.kafka_network.truststore.jks
      KAFKA_LISTENER_NAME_INTERNAL_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_LISTENER_NAME_INTERNAL_SSL_PRINCIPAL_MAPPING_RULES: RULE:^cn=([a-zA-Z0-9.]*).*$$/$$1/L,DEFAULT
      # external listener
      KAFKA_LISTENER_NAME_EXTERNAL_SASL_MECHANISM: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_JAAS_CONFIG: >-
              org.apache.kafka.common.security.plain.PlainLoginModule required 
              user_admin="admin-secret" 
              user_client="client-secret";
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka3.kafka_network.keystore.jks
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka3.kafka_network.truststore.jks
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_LISTENER_NAME_EXTERNAL_SSL_PRINCIPAL_MAPPING_RULES: RULE:^cn=([a-zA-Z0-9.]*).*$$/$$1/L,DEFAULT
      # token listener
      KAFKA_LISTENER_NAME_TOKEN_SASL_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_TOKEN_SASL_ENABLED_MECHANISMS: OAUTHBEARER
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_JAAS_CONFIG: >-
              org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required 
              publicKeyPath="/var/ssl/private/token_crt.pem";
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
      KAFKA_LISTENER_NAME_TOKEN_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka3.kafka_network.keystore.jks
      KAFKA_LISTENER_NAME_TOKEN_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_LISTENER_NAME_TOKEN_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka3.kafka_network.truststore.jks
      KAFKA_LISTENER_NAME_TOKEN_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_LISTENER_NAME_TOKEN_SSL_PRINCIPAL_MAPPING_RULES: RULE:^cn=([a-zA-Z0-9.]*).*$$/$$1/L,DEFAULT
      # authorization
      KAFKA_AUTHORIZER_CLASS_NAME: io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
      KAFKA_CONFLUENT_AUTHORIZER_ACCESS_RULE_PROVIDERS: CONFLUENT,ZK_ACL
      KAFKA_CONFIG_PROVIDERS: file
      KAFKA_CONFIG_PROVIDERS_FILE_CLASS: org.apache.kafka.common.config.provider.FileConfigProvider
      KAFKA_SUPER_USERS: "User:kafka;User:mds"
      # balancer
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # metrics reporter
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:29093,kafka2:29094,kafka3:29095
      CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: SASL_SSL
      CONFLUENT_METRICS_REPORTER_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka3.kafka_network.keystore.jks
      CONFLUENT_METRICS_REPORTER_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      CONFLUENT_METRICS_REPORTER_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka3.kafka_network.truststore.jks
      CONFLUENT_METRICS_REPORTER_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      CONFLUENT_METRICS_REPORTER_SASL_MECHANISM: PLAIN
      CONFLUENT_METRICS_REPORTER_PUBLISH_MS: 30000
      CONFLUENT_METRICS_REPORTER_SASL_JAAS_CONFIG: >-
              org.apache.kafka.common.security.plain.PlainLoginModule required 
              username="kafka" 
              password="kafka-secret";
      # mds
      KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_METHOD: BEARER
      KAFKA_CONFLUENT_METADATA_SERVER_LISTENERS: https://0.0.0.0:8093
      KAFKA_CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS: https://kafka3:8093
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka3.kafka_network.keystore.jks
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_KEY_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka3.kafka_network.truststore.jks
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_CONFLUENT_METADATA_SERVER_OPENAPI_ENABLE: 'true'
      KAFKA_CONFLUENT_METADATA_SERVER_PUBLIC_KEY_PATH: /var/ssl/private/token_crt.pem
      KAFKA_CONFLUENT_METADATA_SERVER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: HTTPS
      KAFKA_CONFLUENT_METADATA_SERVER_ENABLE_SERVERS_URLS_REFRESH: 'false'
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_AUTH_ENABLE: 'true'
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_KEY_PATH: /var/ssl/private/token_key.pem
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_MAX_LIFETIME_MS: 3600000
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_SIGNATURE_ALGORITHM: RS256
      # ldap
      KAFKA_LDAP_JAVA_NAMING_FACTORY_INITIAL: com.sun.jndi.ldap.LdapCtxFactory
      KAFKA_LDAP_COM_SUN_JNDI_LDAP_READ_TIMEOUT: 3000
      KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL: ldap://ldap:389
      KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL: cn=mds,dc=mycompany,dc=com
      KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS: mds-secret
      KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION: simple
      KAFKA_LDAP_GROUP_SEARCH_BASE: ou=groups,dc=mycompany,dc=com
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE_PATTERN: cn=(.*),ou=groups,dc=mycompany,dc=com
      KAFKA_LDAP_GROUP_NAME_ATTRIBUTE: cn
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE: member
      KAFKA_LDAP_GROUP_OBJECT_CLASS: group
      KAFKA_LDAP_USER_SEARCH_BASE: ou=users,dc=mycompany,dc=com
      KAFKA_LDAP_USER_MEMBEROF_ATTRIBUTE_PATTER: cn=(.*),ou=users,dc=mycompany,dc=com
      KAFKA_LDAP_USER_NAME_ATTRIBUTE: cn
      KAFKA_LDAP_USER_OBJECT_CLASS: organizationalRole
      # embedded rest client
      KAFKA_KAFKA_REST_BOOTSTRAP_SERVERS: kafka1:19093,kafka2:19094,kafka3:19094
      KAFKA_KAFKA_REST_CLIENT_SECURITY_PROTOCOL: SASL_SSL
      KAFKA_KAFKA_REST_CLIENT_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka3.kafka_network.keystore.jks
      KAFKA_KAFKA_REST_CLIENT_SSL_KEYSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_KAFKA_REST_CLIENT_SSL_KEY_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_KAFKA_REST_CLIENT_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka3.kafka_network.truststore.jks
      KAFKA_KAFKA_REST_CLIENT_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_KAFKA_REST_CLIENT_CONFLUENT_METADATA_SERVER_URLS_MAX_AGE_MS: 60000
      KAFKA_KAFKA_REST_CLIENT_SASL_JAAS_CONFIG: >-
              org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required 
              metadataServerUrls="https://kafka1:8091,https://kafka2:8092,https://kafka3:8093" 
              username="kafka" 
              password="kafka-secret";
      KAFKA_KAFKA_REST_CLIENT_SASL_MECHANISM: OAUTHBEARER
      # embedded rest
      KAFKA_KAFKA_REST_ENABLE: 'true'
      KAFKA_KAFKA_REST_KAFKA_REST_RESOURCE_EXTENSION_CLASS: io.confluent.kafkarest.security.KafkaRestSecurityResourceExtension
      KAFKA_KAFKA_REST_REST_SERVLET_INITIALIZOR_CLASSES: io.confluent.common.security.jetty.initializer.InstallBearerOrBasicSecurityHandler
      KAFKA_KAFKA_REST_PUBLIC_KEY_PATH: /var/ssl/private/token_crt.pem
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_BOOTSTRAP_SERVER_URLS: https://kafka1:8091,https://kafka2:8092,https://kafka3:8093
      KAFKA_KAFKA_REST_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka3.kafka_network.truststore.jks
      KAFKA_KAFKA_REST_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_BOOTSTRAP_SERVER: https://kafka1:8091,https://kafka2:8092,https://kafka3:8093
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_HTTP_AUTH_CREDENTIALS_PROVIDER: BASIC
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_BASIC_AUTH_USER_INFO: 'kafka:kafka-secret'
      KAFKA_KAFKA_REST_CONFLUENT_METADATA_SERVER_URLS_MAX_AGE_MS: 60000
      # schema validation
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: https://schema1:8081
      KAFKA_CONFLUENT_BASIC_AUTH_CREDENTIALS_SOURCE: USER_INFO
      KAFKA_CONFLUENT_BASIC_AUTH_USER_INFO: 'kafka:kafka-secret'
      KAFKA_CONFLUENT_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka3.kafka_network.truststore.jks
      KAFKA_CONFLUENT_SSL_TRUSTSTORE_PASSWORD: ${KEYSTORE_PASSWORD}
      # logging
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: kafka.authorizer.logger=INFO
      #KAFKA_OPTS: '-Djavax.net.debug=ssl'
      #KAFKA_JMX_PORT: 9010
      #KAFKA_JMX_HOSTNAME: localhost
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/secrets/zoo-client-jaas.conf"
    volumes:
      - ./volumes/kafka-3/data:/var/lib/kafka/data
      - ./volumes/kafka-3/logs:/var/log/kafka
      - ./volumes/jmx_exporter:/jmx_exporter
      - ./certs:/var/ssl/private:ro
      - ./secrets:/etc/kafka/secrets:ro
    networks:
      - kafka-network

  loadbalancer:
    image: mark-christiansen/nginx:0.0.1
    hostname: loadbalancer
    container_name: loadbalancer
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    ports:
      - "9092:9092"
      - "19092:19092"
      - "29092:29092"
    networks:
      - kafka-network

  client:
    image: mark-christiansen/kafka-client:0.0.1
    hostname: client
    container_name: client
    command:
      - bash
      - -c
      - |
        sleep 1
        tail -f /dev/null
    depends_on:
      - loadbalancer
      - kafka1
      - kafka2
      - kafka3
    volumes:
      - ./client/scripts:/scripts:ro
      - ./certs:/var/ssl/private:ro
    networks:
      - kafka-network

networks:
  kafka-network:
    name: kafka_network